<?xml version="1.0" encoding="UTF-8" ?>
<pipeline-def name="event-consolidation" description="This is the process for transforming event data" version="1.0.0">
    <settings>
        <singleSparkSession setting="false" />
        <globalViewAsLocal setting="true" />
    </settings>

    <variables>
        <variable name="process_date" value="${events.process_date}" />
        <variable name="staging_uri" value="file:///tmp/staging/events" />
        <variable name="redis.password" value="${events.db.password}" decryptionKeyString="${application.security.decryption.key}" />
    </variables>

    <aliases>
        <alias name="file-stream-reader" type="com.it21learning.etl.source.FileStreamReader" />
        <alias name="flat-stream-reader" type="com.it21learning.etl.source.FlatStreamReader" />
        <alias name="sql" type="com.it21learning.etl.transform.SqlTransformer" />
        <alias name="redis-stream-writer" type="com.it21learning.etl.sink.RedisStreamWriter" />
    </aliases>

    <job name="prepare events-features">
        <action name="load users">
            <actor type="file-stream-reader">
                <properties>
                    <format>csv</format>
                    <options>
                        <header>true</header>
                        <delimiter>,</delimiter>
                        <maxFileAge>16h</maxFileAge>
                    </options>
                    <ddlSchemaString>user_id string, birthyear string, gender string, joinedAt string</ddlSchemaString>
                    <watermark>
                        <timeField>__timestamp</timeField>
                        <delayThreshold>5 minutes</delayThreshold>
                    </watermark>
                    <addTimestamp>true</addTimestamp>
                    <fileUri>${events.users_input}</fileUri>
                </properties>
            </actor>
            <output-view name="users" />
        </action>
        <action name="load train">
            <actor type="flat-stream-reader">
                <properties>
                    <row>
                        <valueField>value</valueField>
                    </row>
                    <watermark>
                        <timeField>__timestamp</timeField>
                        <delayThreshold>5 minutes</delayThreshold>
                    </watermark>
                    <addTimestamp>true</addTimestamp>
                    <fileUri>${events.train_input}</fileUri>
                </properties>
            </actor>
            <output-view name="train" />
        </action>
        <action name="transform users-train">
            <actor type="sql">
                <properties>
                    <sqlFile>${application.scripts_uri}/stream-user-train.sql</sqlFile>
                </properties>
            </actor>
            <input-views>
                <view name="users" />
                <view name="train" />
            </input-views>
            <output-view name="features" />
        </action>
        <action name="write features">
            <actor type="redis-stream-writer">
                <properties>
                    <host>localhost</host>
                    <port>6379</port>
                    <dbNum>9</dbNum>
                    <dbTable>features</dbTable>
                    <authPassword>${redis.password}</authPassword>
                    <options>
                        <checkpointLocation>/tmp/checkpoint-redis-staging</checkpointLocation>
                    </options>
                    <trigger>
                        <mode>processingTime</mode>
                        <interval>30 seconds</interval>
                    </trigger>
                    <outputMode>append</outputMode>
                    <test>
                        <waittimeMS>60000</waittimeMS>
                    </test>
                    <view>features</view>
                </properties>
            </actor>
            <input-views>
                <view name="features" />
            </input-views>
        </action>
    </job>
</pipeline-def>